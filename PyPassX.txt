import random
import string
import json
from cryptography.fernet import Fernet


# Generate a key for encryption (only once, then save it)
def generate_key():
    return Fernet.generate_key()


# Load or create encryption key
def load_key():
    try:
        with open("secret.key", "rb") as key_file:
            return key_file.read()
    except FileNotFoundError:
        key = generate_key()
        with open("secret.key", "wb") as key_file:
            key_file.write(key)
        return key


# Generate a random strong password
def generate_password(length=12):
    chars = string.ascii_letters + string.digits + string.punctuation
    return "".join(random.choice(chars) for _ in range(length))


# Save account info with encryption
def save_password(service, username, password, fernet):
    data = {}
    try:
        with open("passwords.json", "r") as file:
            data = json.load(file)
    except FileNotFoundError:
        pass

    encrypted_pass = fernet.encrypt(password.encode()).decode()
    data[service] = {"username": username, "password": encrypted_pass}

    with open("passwords.json", "w") as file:
        json.dump(data, file, indent=4)


# Retrieve account info
def get_password(service, fernet):
    try:
        with open("passwords.json", "r") as file:
            data = json.load(file)
            if service in data:
                username = data[service]["username"]
                password = fernet.decrypt(data[service]["password"].encode()).decode()
                return username, password
    except FileNotFoundError:
        return None
    return None


if __name__ == "__main__":
    key = load_key()
    fernet = Fernet(key)

    print("üîê Simple Password Manager üîê")
    print("1. Generate new password")
    print("2. Save a password")
    print("3. Get a password")
    choice = input("Enter choice: ")

    if choice == "1":
        length = int(input("Enter length: "))
        print("Generated password:", generate_password(length))

    elif choice == "2":
        service = input("Service name: ")
        username = input("Username: ")
        password = input("Password (leave empty to generate): ")
        if not password:
            password = generate_password()
            print("Generated password:", password)
        save_password(service, username, password, fernet)
        print("Password saved successfully!")

    elif choice == "3":
        service = input("Service name: ")
        result = get_password(service, fernet)
        if result:
            print("Username:", result[0])
            print("Password:", result[1])
        else:
            print("No password found for this service.")
